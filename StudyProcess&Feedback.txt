[[1차과제 피드백]]
1. 환경 설정에 대한 내용 작성 시, 버전에 대한 내용을 함께 작성해주면 좋음.
+ 세팅이 완료된 스크린샷을 함께 작성하면 더욱 좋음

2. 실제로 실무에서 환경 세팅을 잘 완료하면 사용한 프로그램이나 소프트웨어(JDK, Tomcat, MariaDB)등의 버전을 잘 작성해 놓아야 신규 인력이 들어오거나 버전 업을 할 때 참고할 수 있는 문서가 됨.

3. 개발 환경에서 버전은 호환성에 영향을 미침.
=> 이클립스 ,JDK maven dependency등 모두 각 버전의 호환성에 영향을 미침. 
따라서 실무에서도 버전 변경을 하는 등의 작업은 다른 연결되어있는 환경이나 시스템에도 큰 영향을 주기 때문에 쉽지 않은 작업임.
 특히 신규 인력이 들어올 때에도 이러한 문제에 직면하는데, 신규 인력이 환경세팅을 쉽고 빠르게 진행할 수 있도록 기존 인력들이 준비해주는 경우도 있음.
예를 들면 docker를 이용하여 환경 세팅을 바로 할 수 있게 해주거나 기존 설치 디렉토리를 카피하여 환경 구성에 도움을 줄 수 있다고 함!

4. pom.xml로 maven dependency 등록에 대한 작업에 있어서, 이번 과제에서는 Spring등의 의존성을 쉽게 온라인으로 받아올 수 있었음. 하지만 실무에서는 폐쇄망을 사용하여 작업하는 경우가 많아 직접 라이브러리를 폴더에 넣는 작업을 하는 경우가 많다고 함.
 이럴 때는 개발 환경이 잘 구성된 동료의 환경을 비교해가며 작업을 수행하는 경우가 더 많음.

5. Controller, VO, Service, Mybatis등의 기능을 정확히 이해하고 사용할 줄 알아야 함. 기본적인 MVC패턴과, 이를 위한 DB세팅작업, 또한 쿼리를 효율적으로 이용하기 위한 mybatis의 활용 등 흐름을 이해할 줄 알아야 함.

***DTO, DAO, VO, mybatis등의 용어와 개념, 사용 목적 이해해보기
***JDK, Tomcat, MariaDB등 사용 시스템 및 환경 버전 확인하여 기록하는 습관 갖기
***maven, gradle 등의 개발 툴, dependency 등 이해하고 적용해보기
 ================================================
-tomcat jvm jdk

-DTO VO DAO

- maven, gradle
빌드 : 소스코드 혹은 프로젝트에 쓰인 파일 및 자원등을 JVM이나 톰캣같은 was가 인식할 수 있는 구조로 패키징 하는 과정 및 결과물
빌드도구 : 프로젝트 생상, 테스트 빌드, 배포 등의 작업을 위한 전용 프로그램
라이브러리가 빠른 시간 내에 늘어나고, 라이브러리의 버전 동기화의 어려움을 해소하기 위해 등장. ant / maven / gradle . 
maven : 필요한 라이브러리 및 외부 자료를 특정 문서(pom.xml)(project of model)에 정의해 놓으면 자동으로 내가 추가한 라이브러리뿐만 아니라 관계되어있는 다른 라이브러리들까지 자동으로 관리하여 네트워크를 통해 다운받아 줌.
pom.xml은 메이븐을 이용하는 프로젝트의 최상단(root)에 존재하는 xml형식의 파일. 프로젝트마다 하나 새성되며 를 통해 프로젝트의 모든 설정, 의존성 확인 가능

-pom.xml, root-context.xml, . . 
-dependency
-mybatis jdbc jpa . .
